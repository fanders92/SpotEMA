//
//  KRWSpotButtonStyleKit.swift
//  Spot
//
//  Created by Konstantin Wachendorff on 06/01/15.
//  Copyright (c) 2015 K.Wachendorff & F.Anders. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class KRWSpotButtonStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var kRWDrunkButtonColor: UIColor = UIColor(red: 0.163, green: 0.329, blue: 0.688, alpha: 1.000)
        static var kRWDrunkButtonColorClicked: UIColor = KRWSpotButtonStyleKit.kRWDrunkButtonColor.colorWithBrightness(1)
        static var kRWHomeButtonColor: UIColor = UIColor(red: 0.826, green: 0.748, blue: 0.366, alpha: 1.000)
        static var kRWContactButtonColor: UIColor = UIColor(red: 0.820, green: 0.339, blue: 0.339, alpha: 1.000)
        static var kRWHomeButtonColorClicked: UIColor = KRWSpotButtonStyleKit.kRWHomeButtonColor.colorWithBrightness(1)
        static var kRWContactButtonColorClicked: UIColor = KRWSpotButtonStyleKit.kRWContactButtonColor.colorWithBrightness(1)
        static var kRWCallButtonColor: UIColor = UIColor(red: 0.311, green: 0.767, blue: 0.475, alpha: 1.000)
        static var kRWCallButtonColorClicked: UIColor = KRWSpotButtonStyleKit.kRWCallButtonColor.colorWithBrightness(0.9)
    }

    //// Colors

    public class var kRWDrunkButtonColor: UIColor { return Cache.kRWDrunkButtonColor }
    public class var kRWDrunkButtonColorClicked: UIColor { return Cache.kRWDrunkButtonColorClicked }
    public class var kRWHomeButtonColor: UIColor { return Cache.kRWHomeButtonColor }
    public class var kRWContactButtonColor: UIColor { return Cache.kRWContactButtonColor }
    public class var kRWHomeButtonColorClicked: UIColor { return Cache.kRWHomeButtonColorClicked }
    public class var kRWContactButtonColorClicked: UIColor { return Cache.kRWContactButtonColorClicked }
    public class var kRWCallButtonColor: UIColor { return Cache.kRWCallButtonColor }
    public class var kRWCallButtonColorClicked: UIColor { return Cache.kRWCallButtonColorClicked }

    //// Drawing Methods

    public class func drawKRWDrunkButtonClicked() {

        //// KRWDrunkButton Drawing
        var kRWDrunkButtonPath = UIBezierPath()
        kRWDrunkButtonPath.moveToPoint(CGPointMake(10, 40))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(240, 40))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(240, 10))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(10, 10))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(10, 40))
        kRWDrunkButtonPath.closePath()
        kRWDrunkButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWDrunkButtonColor.setFill()
        kRWDrunkButtonPath.fill()
        KRWSpotButtonStyleKit.kRWDrunkButtonColor.setStroke()
        kRWDrunkButtonPath.lineWidth = 20
        kRWDrunkButtonPath.stroke()


        //// KRWDrunkButtonText Drawing
        let kRWDrunkButtonTextRect = CGRectMake(10, 10, 230, 30)
        let kRWDrunkButtonTextStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        kRWDrunkButtonTextStyle.alignment = NSTextAlignment.Center

        let kRWDrunkButtonTextFontAttributes = [NSFontAttributeName: UIFont(name: "Helvetica", size: 25)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: kRWDrunkButtonTextStyle]

        "I am Drunk!".drawInRect(kRWDrunkButtonTextRect, withAttributes: kRWDrunkButtonTextFontAttributes)
    }

    public class func drawKRWDrunkButtonNormal() {

        //// KRWDrunkButton Drawing
        var kRWDrunkButtonPath = UIBezierPath()
        kRWDrunkButtonPath.moveToPoint(CGPointMake(10, 40))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(240, 40))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(240, 10))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(10, 10))
        kRWDrunkButtonPath.addLineToPoint(CGPointMake(10, 40))
        kRWDrunkButtonPath.closePath()
        kRWDrunkButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setFill()
        kRWDrunkButtonPath.fill()
        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setStroke()
        kRWDrunkButtonPath.lineWidth = 20
        kRWDrunkButtonPath.stroke()


        //// KRWDrunkButtonText Drawing
        let kRWDrunkButtonTextRect = CGRectMake(10, 10, 230, 30)
        let kRWDrunkButtonTextStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        kRWDrunkButtonTextStyle.alignment = NSTextAlignment.Center

        let kRWDrunkButtonTextFontAttributes = [NSFontAttributeName: UIFont(name: "Helvetica", size: 25)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: kRWDrunkButtonTextStyle]

        "I am Drunk!".drawInRect(kRWDrunkButtonTextRect, withAttributes: kRWDrunkButtonTextFontAttributes)
    }

    public class func drawKRWHomeButtonClicked() {

        //// KRWHomeButton Drawing
        var kRWHomeButtonPath = UIBezierPath()
        kRWHomeButtonPath.moveToPoint(CGPointMake(10, 90))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(90, 90))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(90, 10))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(10, 10))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(10, 90))
        kRWHomeButtonPath.closePath()
        kRWHomeButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWHomeButtonPath.fill()
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setStroke()
        kRWHomeButtonPath.lineWidth = 20
        kRWHomeButtonPath.stroke()


        //// KRWHomeButtonHouse Drawing
        var kRWHomeButtonHousePath = UIBezierPath()
        kRWHomeButtonHousePath.moveToPoint(CGPointMake(50.5, 13.5))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(80.62, 39.77), controlPoint1: CGPointMake(50.5, 13.5), controlPoint2: CGPointMake(80.62, 39.77))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(80.56, 39.99), controlPoint1: CGPointMake(80.62, 39.77), controlPoint2: CGPointMake(80.6, 39.84))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(81, 39.99))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(81, 83))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(20, 83))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(20, 39.99))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(20.44, 39.99))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(20.38, 39.77), controlPoint1: CGPointMake(20.4, 39.84), controlPoint2: CGPointMake(20.38, 39.77))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(27.72, 33.37), controlPoint1: CGPointMake(20.38, 39.77), controlPoint2: CGPointMake(23.49, 37.05))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(50.5, 13.5), controlPoint1: CGPointMake(36.63, 25.59), controlPoint2: CGPointMake(50.5, 13.5))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(50.5, 13.5))
        kRWHomeButtonHousePath.closePath()
        kRWHomeButtonHousePath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWDrunkButtonColor.setFill()
        kRWHomeButtonHousePath.fill()
        KRWSpotButtonStyleKit.kRWDrunkButtonColor.setStroke()
        kRWHomeButtonHousePath.lineWidth = 6
        kRWHomeButtonHousePath.stroke()


        //// KRWHomeButtonHouseWindow Drawing
        let kRWHomeButtonHouseWindowPath = UIBezierPath(roundedRect: CGRectMake(27, 45, 19, 17), cornerRadius: 4)
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWHomeButtonHouseWindowPath.fill()


        //// KRWHomeButtonHouseDoor Drawing
        let kRWHomeButtonHouseDoorPath = UIBezierPath(roundedRect: CGRectMake(55, 45, 19, 33), cornerRadius: 4)
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWHomeButtonHouseDoorPath.fill()
    }

    public class func drawKRWHomeButtonNormal() {

        //// KRWHomeButton Drawing
        var kRWHomeButtonPath = UIBezierPath()
        kRWHomeButtonPath.moveToPoint(CGPointMake(10, 90))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(90, 90))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(90, 10))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(10, 10))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(10, 90))
        kRWHomeButtonPath.closePath()
        kRWHomeButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWHomeButtonPath.fill()
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setStroke()
        kRWHomeButtonPath.lineWidth = 20
        kRWHomeButtonPath.stroke()


        //// KRWHomeButtonHouse Drawing
        var kRWHomeButtonHousePath = UIBezierPath()
        kRWHomeButtonHousePath.moveToPoint(CGPointMake(50.5, 13.5))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(80.62, 39.77), controlPoint1: CGPointMake(50.5, 13.5), controlPoint2: CGPointMake(80.62, 39.77))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(80.56, 39.99), controlPoint1: CGPointMake(80.62, 39.77), controlPoint2: CGPointMake(80.6, 39.84))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(81, 39.99))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(81, 83))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(20, 83))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(20, 39.99))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(20.44, 39.99))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(20.38, 39.77), controlPoint1: CGPointMake(20.4, 39.84), controlPoint2: CGPointMake(20.38, 39.77))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(27.72, 33.37), controlPoint1: CGPointMake(20.38, 39.77), controlPoint2: CGPointMake(23.49, 37.05))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(50.5, 13.5), controlPoint1: CGPointMake(36.63, 25.59), controlPoint2: CGPointMake(50.5, 13.5))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(50.5, 13.5))
        kRWHomeButtonHousePath.closePath()
        kRWHomeButtonHousePath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setFill()
        kRWHomeButtonHousePath.fill()
        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setStroke()
        kRWHomeButtonHousePath.lineWidth = 6
        kRWHomeButtonHousePath.stroke()


        //// KRWHomeButtonHouseWindow Drawing
        let kRWHomeButtonHouseWindowPath = UIBezierPath(roundedRect: CGRectMake(27, 45, 19, 17), cornerRadius: 4)
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWHomeButtonHouseWindowPath.fill()


        //// KRWHomeButtonHouseDoor Drawing
        let kRWHomeButtonHouseDoorPath = UIBezierPath(roundedRect: CGRectMake(55, 45, 19, 33), cornerRadius: 4)
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWHomeButtonHouseDoorPath.fill()
    }

    public class func drawKRWHomeButtonSmallNormal() {

        //// KRWHomeButton Drawing
        var kRWHomeButtonPath = UIBezierPath()
        kRWHomeButtonPath.moveToPoint(CGPointMake(3, 27))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(27, 27))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(27, 3))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(3, 3))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(3, 27))
        kRWHomeButtonPath.closePath()
        kRWHomeButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWHomeButtonPath.fill()
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setStroke()
        kRWHomeButtonPath.lineWidth = 6
        kRWHomeButtonPath.stroke()


        //// KRWHomeButtonHouse Drawing
        var kRWHomeButtonHousePath = UIBezierPath()
        kRWHomeButtonHousePath.moveToPoint(CGPointMake(15, 4))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(24.88, 11.94))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(24.86, 12.01), controlPoint1: CGPointMake(24.88, 11.94), controlPoint2: CGPointMake(24.87, 11.96))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(25, 12.01))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(25, 25))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(5, 25))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(5, 12.01))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(5.14, 12.01))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(5.12, 11.94), controlPoint1: CGPointMake(5.13, 11.96), controlPoint2: CGPointMake(5.12, 11.94))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(7.53, 10), controlPoint1: CGPointMake(5.12, 11.94), controlPoint2: CGPointMake(6.14, 11.12))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(15, 4), controlPoint1: CGPointMake(10.45, 7.65), controlPoint2: CGPointMake(15, 4))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(15, 4))
        kRWHomeButtonHousePath.closePath()
        kRWHomeButtonHousePath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setFill()
        kRWHomeButtonHousePath.fill()
        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setStroke()
        kRWHomeButtonHousePath.lineWidth = 2
        kRWHomeButtonHousePath.stroke()


        //// KRWHomeButtonHouseWindow Drawing
        let kRWHomeButtonHouseWindowPath = UIBezierPath(roundedRect: CGRectMake(8, 14, 5, 5), cornerRadius: 1)
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWHomeButtonHouseWindowPath.fill()


        //// KRWHomeButtonHouseDoor Drawing
        let kRWHomeButtonHouseDoorPath = UIBezierPath(roundedRect: CGRectMake(17, 14, 5, 9), cornerRadius: 1)
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWHomeButtonHouseDoorPath.fill()
    }

    public class func drawKRWHomeButtonSmallClicked() {

        //// KRWHomeButton Drawing
        var kRWHomeButtonPath = UIBezierPath()
        kRWHomeButtonPath.moveToPoint(CGPointMake(3, 27))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(27, 27))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(27, 3))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(3, 3))
        kRWHomeButtonPath.addLineToPoint(CGPointMake(3, 27))
        kRWHomeButtonPath.closePath()
        kRWHomeButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWHomeButtonPath.fill()
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setStroke()
        kRWHomeButtonPath.lineWidth = 6
        kRWHomeButtonPath.stroke()


        //// KRWHomeButtonHouse Drawing
        var kRWHomeButtonHousePath = UIBezierPath()
        kRWHomeButtonHousePath.moveToPoint(CGPointMake(15, 4))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(24.88, 11.94))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(24.86, 12.01), controlPoint1: CGPointMake(24.88, 11.94), controlPoint2: CGPointMake(24.87, 11.96))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(25, 12.01))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(25, 25))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(5, 25))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(5, 12.01))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(5.14, 12.01))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(5.12, 11.94), controlPoint1: CGPointMake(5.13, 11.96), controlPoint2: CGPointMake(5.12, 11.94))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(7.53, 10), controlPoint1: CGPointMake(5.12, 11.94), controlPoint2: CGPointMake(6.14, 11.12))
        kRWHomeButtonHousePath.addCurveToPoint(CGPointMake(15, 4), controlPoint1: CGPointMake(10.45, 7.65), controlPoint2: CGPointMake(15, 4))
        kRWHomeButtonHousePath.addLineToPoint(CGPointMake(15, 4))
        kRWHomeButtonHousePath.closePath()
        kRWHomeButtonHousePath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWDrunkButtonColor.setFill()
        kRWHomeButtonHousePath.fill()
        KRWSpotButtonStyleKit.kRWDrunkButtonColor.setStroke()
        kRWHomeButtonHousePath.lineWidth = 2
        kRWHomeButtonHousePath.stroke()


        //// KRWHomeButtonHouseWindow Drawing
        let kRWHomeButtonHouseWindowPath = UIBezierPath(roundedRect: CGRectMake(8, 14, 5, 5), cornerRadius: 1)
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWHomeButtonHouseWindowPath.fill()


        //// KRWHomeButtonHouseDoor Drawing
        let kRWHomeButtonHouseDoorPath = UIBezierPath(roundedRect: CGRectMake(17, 14, 5, 9), cornerRadius: 1)
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWHomeButtonHouseDoorPath.fill()
    }

    public class func drawKRWContactButtonClicked() {

        //// KRWContactButton Drawing
        var kRWContactButtonPath = UIBezierPath()
        kRWContactButtonPath.moveToPoint(CGPointMake(10, 90))
        kRWContactButtonPath.addLineToPoint(CGPointMake(90, 90))
        kRWContactButtonPath.addLineToPoint(CGPointMake(90, 10))
        kRWContactButtonPath.addLineToPoint(CGPointMake(10, 10))
        kRWContactButtonPath.addLineToPoint(CGPointMake(10, 90))
        kRWContactButtonPath.closePath()
        kRWContactButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWContactButtonColor.setFill()
        kRWContactButtonPath.fill()
        KRWSpotButtonStyleKit.kRWContactButtonColor.setStroke()
        kRWContactButtonPath.lineWidth = 20
        kRWContactButtonPath.stroke()


        //// KRWContactButtonBody Drawing
        var kRWContactButtonBodyPath = UIBezierPath()
        kRWContactButtonBodyPath.moveToPoint(CGPointMake(74.49, 89.47))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(74.73, 61.59), controlPoint1: CGPointMake(91.5, 88.77), controlPoint2: CGPointMake(88.01, 70.39))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(26.62, 61.59), controlPoint1: CGPointMake(61.44, 52.8), controlPoint2: CGPointMake(39.9, 52.8))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(26.86, 89.47), controlPoint1: CGPointMake(13.33, 70.39), controlPoint2: CGPointMake(8.15, 88.77))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(74.49, 89.47), controlPoint1: CGPointMake(45.57, 90.18), controlPoint2: CGPointMake(57.48, 90.18))
        kRWContactButtonBodyPath.closePath()
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWContactButtonBodyPath.fill()


        //// KRWContactButtonHead Drawing
        var kRWContactButtonHeadPath = UIBezierPath(ovalInRect: CGRectMake(33.5, 15.5, 34, 34))
        KRWSpotButtonStyleKit.kRWHomeButtonColor.setFill()
        kRWContactButtonHeadPath.fill()
    }

    public class func drawKRWContactButtonNormal() {

        //// KRWContactButton Drawing
        var kRWContactButtonPath = UIBezierPath()
        kRWContactButtonPath.moveToPoint(CGPointMake(10, 90))
        kRWContactButtonPath.addLineToPoint(CGPointMake(90, 90))
        kRWContactButtonPath.addLineToPoint(CGPointMake(90, 10))
        kRWContactButtonPath.addLineToPoint(CGPointMake(10, 10))
        kRWContactButtonPath.addLineToPoint(CGPointMake(10, 90))
        kRWContactButtonPath.closePath()
        kRWContactButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWContactButtonColorClicked.setFill()
        kRWContactButtonPath.fill()
        KRWSpotButtonStyleKit.kRWContactButtonColorClicked.setStroke()
        kRWContactButtonPath.lineWidth = 20
        kRWContactButtonPath.stroke()


        //// KRWContactButtonBody Drawing
        var kRWContactButtonBodyPath = UIBezierPath()
        kRWContactButtonBodyPath.moveToPoint(CGPointMake(74.49, 89.47))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(74.73, 61.59), controlPoint1: CGPointMake(91.5, 88.77), controlPoint2: CGPointMake(88.01, 70.39))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(26.62, 61.59), controlPoint1: CGPointMake(61.44, 52.8), controlPoint2: CGPointMake(39.9, 52.8))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(26.86, 89.47), controlPoint1: CGPointMake(13.33, 70.39), controlPoint2: CGPointMake(8.15, 88.77))
        kRWContactButtonBodyPath.addCurveToPoint(CGPointMake(74.49, 89.47), controlPoint1: CGPointMake(45.57, 90.18), controlPoint2: CGPointMake(57.48, 90.18))
        kRWContactButtonBodyPath.closePath()
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWContactButtonBodyPath.fill()


        //// KRWContactButtonHead Drawing
        var kRWContactButtonHeadPath = UIBezierPath(ovalInRect: CGRectMake(33.5, 15.5, 34, 34))
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        kRWContactButtonHeadPath.fill()
    }

    public class func drawKRWCallButton2Normal() {

        //// KRWCallButton2 Drawing
        var kRWCallButton2Path = UIBezierPath()
        kRWCallButton2Path.moveToPoint(CGPointMake(3, 27))
        kRWCallButton2Path.addLineToPoint(CGPointMake(27, 27))
        kRWCallButton2Path.addLineToPoint(CGPointMake(27, 3))
        kRWCallButton2Path.addLineToPoint(CGPointMake(3, 3))
        kRWCallButton2Path.addLineToPoint(CGPointMake(3, 27))
        kRWCallButton2Path.closePath()
        kRWCallButton2Path.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWCallButtonColorClicked.setFill()
        kRWCallButton2Path.fill()
        KRWSpotButtonStyleKit.kRWCallButtonColorClicked.setStroke()
        kRWCallButton2Path.lineWidth = 6
        kRWCallButton2Path.stroke()


        //// KRWTelephone Drawing
        var kRWTelephonePath = UIBezierPath()
        kRWTelephonePath.moveToPoint(CGPointMake(24.63, 5.61))
        kRWTelephonePath.addCurveToPoint(CGPointMake(24.1, 8.5), controlPoint1: CGPointMake(24.81, 6.61), controlPoint2: CGPointMake(24.6, 7.64))
        kRWTelephonePath.addCurveToPoint(CGPointMake(23.6, 10.96), controlPoint1: CGPointMake(24.13, 9.03), controlPoint2: CGPointMake(24, 9.82))
        kRWTelephonePath.addCurveToPoint(CGPointMake(10.02, 23.71), controlPoint1: CGPointMake(21.87, 16.01), controlPoint2: CGPointMake(15.94, 22.31))
        kRWTelephonePath.addCurveToPoint(CGPointMake(8.74, 23.97), controlPoint1: CGPointMake(9.53, 23.83), controlPoint2: CGPointMake(9.1, 23.92))
        kRWTelephonePath.addCurveToPoint(CGPointMake(7.73, 24.47), controlPoint1: CGPointMake(8.43, 24.18), controlPoint2: CGPointMake(8.09, 24.35))
        kRWTelephonePath.addCurveToPoint(CGPointMake(3.48, 21.93), controlPoint1: CGPointMake(5.76, 25.11), controlPoint2: CGPointMake(3.85, 23.97))
        kRWTelephonePath.addCurveToPoint(CGPointMake(5.23, 17.67), controlPoint1: CGPointMake(3.19, 20.32), controlPoint2: CGPointMake(3.93, 18.62))
        kRWTelephonePath.addCurveToPoint(CGPointMake(6.38, 17.07), controlPoint1: CGPointMake(5.58, 17.41), controlPoint2: CGPointMake(5.97, 17.21))
        kRWTelephonePath.addCurveToPoint(CGPointMake(10.58, 19.39), controlPoint1: CGPointMake(8.28, 16.46), controlPoint2: CGPointMake(10.12, 17.49))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.46, 10.43), controlPoint1: CGPointMake(13.11, 16.83), controlPoint2: CGPointMake(16.95, 12.96))
        kRWTelephonePath.addCurveToPoint(CGPointMake(17.8, 8.9), controlPoint1: CGPointMake(18.75, 10.15), controlPoint2: CGPointMake(18.16, 9.62))
        kRWTelephonePath.addCurveToPoint(CGPointMake(17.48, 7.93), controlPoint1: CGPointMake(17.65, 8.6), controlPoint2: CGPointMake(17.54, 8.28))
        kRWTelephonePath.addCurveToPoint(CGPointMake(20.38, 3.07), controlPoint1: CGPointMake(17.11, 5.89), controlPoint2: CGPointMake(18.41, 3.71))
        kRWTelephonePath.addCurveToPoint(CGPointMake(24.63, 5.61), controlPoint1: CGPointMake(22.36, 2.43), controlPoint2: CGPointMake(24.26, 3.57))
        kRWTelephonePath.closePath()
        UIColor.whiteColor().setFill()
        kRWTelephonePath.fill()
    }

    public class func drawKRWCallButtonNormal() {

        //// KRWCallButton Drawing
        var kRWCallButtonPath = UIBezierPath()
        kRWCallButtonPath.moveToPoint(CGPointMake(3, 27))
        kRWCallButtonPath.addLineToPoint(CGPointMake(27, 27))
        kRWCallButtonPath.addLineToPoint(CGPointMake(27, 3))
        kRWCallButtonPath.addLineToPoint(CGPointMake(3, 3))
        kRWCallButtonPath.addLineToPoint(CGPointMake(3, 27))
        kRWCallButtonPath.closePath()
        kRWCallButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWCallButtonColorClicked.setFill()
        kRWCallButtonPath.fill()
        KRWSpotButtonStyleKit.kRWCallButtonColorClicked.setStroke()
        kRWCallButtonPath.lineWidth = 6
        kRWCallButtonPath.stroke()


        //// KRWTelephone Drawing
        var kRWTelephonePath = UIBezierPath()
        kRWTelephonePath.moveToPoint(CGPointMake(21.63, 2))
        kRWTelephonePath.addCurveToPoint(CGPointMake(25, 5.7), controlPoint1: CGPointMake(21.63, 2), controlPoint2: CGPointMake(25.28, 3.34))
        kRWTelephonePath.addCurveToPoint(CGPointMake(23.65, 8.32), controlPoint1: CGPointMake(24.9, 6.51), controlPoint2: CGPointMake(24.34, 7.44))
        kRWTelephonePath.addCurveToPoint(CGPointMake(23.78, 10.09), controlPoint1: CGPointMake(23.77, 8.64), controlPoint2: CGPointMake(23.82, 9.19))
        kRWTelephonePath.addCurveToPoint(CGPointMake(13, 23), controlPoint1: CGPointMake(23.55, 14.17), controlPoint2: CGPointMake(17, 22))
        kRWTelephonePath.addCurveToPoint(CGPointMake(10.86, 23.24), controlPoint1: CGPointMake(11.86, 23.29), controlPoint2: CGPointMake(11.21, 23.33))
        kRWTelephonePath.addCurveToPoint(CGPointMake(7.87, 25.99), controlPoint1: CGPointMake(9.94, 24.48), controlPoint2: CGPointMake(8.85, 25.68))
        kRWTelephonePath.addCurveToPoint(CGPointMake(4, 22.88), controlPoint1: CGPointMake(5.65, 26.7), controlPoint2: CGPointMake(4, 22.88))
        kRWTelephonePath.addCurveToPoint(CGPointMake(6.21, 20.22), controlPoint1: CGPointMake(4, 22.88), controlPoint2: CGPointMake(5.07, 21.59))
        kRWTelephonePath.addCurveToPoint(CGPointMake(8.9, 17), controlPoint1: CGPointMake(7.51, 18.66), controlPoint2: CGPointMake(8.9, 17))
        kRWTelephonePath.addCurveToPoint(CGPointMake(11.69, 19.13), controlPoint1: CGPointMake(8.9, 17), controlPoint2: CGPointMake(10.51, 18.23))
        kRWTelephonePath.addCurveToPoint(CGPointMake(12.69, 18.92), controlPoint1: CGPointMake(11.99, 18.98), controlPoint2: CGPointMake(12.34, 18.91))
        kRWTelephonePath.addCurveToPoint(CGPointMake(13.46, 19.1), controlPoint1: CGPointMake(12.96, 18.93), controlPoint2: CGPointMake(13.23, 18.99))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.42, 12.05), controlPoint1: CGPointMake(15.23, 17), controlPoint2: CGPointMake(17.62, 14.18))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.36, 10.43), controlPoint1: CGPointMake(19.19, 11.54), controlPoint2: CGPointMake(19.16, 10.9))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.42, 10.32), controlPoint1: CGPointMake(19.38, 10.39), controlPoint2: CGPointMake(19.4, 10.36))
        kRWTelephonePath.addCurveToPoint(CGPointMake(17, 7.81), controlPoint1: CGPointMake(18.39, 9.26), controlPoint2: CGPointMake(17, 7.81))
        kRWTelephonePath.addLineToPoint(CGPointMake(21.63, 2))
        kRWTelephonePath.addLineToPoint(CGPointMake(21.63, 2))
        kRWTelephonePath.closePath()
        UIColor.whiteColor().setFill()
        kRWTelephonePath.fill()
    }

    public class func drawKRWCallButtonClicked() {

        //// KRWCallButton Drawing
        var kRWCallButtonPath = UIBezierPath()
        kRWCallButtonPath.moveToPoint(CGPointMake(3, 27))
        kRWCallButtonPath.addLineToPoint(CGPointMake(27, 27))
        kRWCallButtonPath.addLineToPoint(CGPointMake(27, 3))
        kRWCallButtonPath.addLineToPoint(CGPointMake(3, 3))
        kRWCallButtonPath.addLineToPoint(CGPointMake(3, 27))
        kRWCallButtonPath.closePath()
        kRWCallButtonPath.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWCallButtonColor.setFill()
        kRWCallButtonPath.fill()
        KRWSpotButtonStyleKit.kRWCallButtonColor.setStroke()
        kRWCallButtonPath.lineWidth = 6
        kRWCallButtonPath.stroke()


        //// KRWTelephone Drawing
        var kRWTelephonePath = UIBezierPath()
        kRWTelephonePath.moveToPoint(CGPointMake(21.63, 2))
        kRWTelephonePath.addCurveToPoint(CGPointMake(25, 5.7), controlPoint1: CGPointMake(21.63, 2), controlPoint2: CGPointMake(25.28, 3.34))
        kRWTelephonePath.addCurveToPoint(CGPointMake(23.65, 8.32), controlPoint1: CGPointMake(24.9, 6.51), controlPoint2: CGPointMake(24.34, 7.44))
        kRWTelephonePath.addCurveToPoint(CGPointMake(23.78, 10.09), controlPoint1: CGPointMake(23.77, 8.64), controlPoint2: CGPointMake(23.82, 9.19))
        kRWTelephonePath.addCurveToPoint(CGPointMake(13, 23), controlPoint1: CGPointMake(23.55, 14.17), controlPoint2: CGPointMake(17, 22))
        kRWTelephonePath.addCurveToPoint(CGPointMake(10.86, 23.24), controlPoint1: CGPointMake(11.86, 23.29), controlPoint2: CGPointMake(11.21, 23.33))
        kRWTelephonePath.addCurveToPoint(CGPointMake(7.87, 25.99), controlPoint1: CGPointMake(9.94, 24.48), controlPoint2: CGPointMake(8.85, 25.68))
        kRWTelephonePath.addCurveToPoint(CGPointMake(4, 22.88), controlPoint1: CGPointMake(5.65, 26.7), controlPoint2: CGPointMake(4, 22.88))
        kRWTelephonePath.addCurveToPoint(CGPointMake(6.21, 20.22), controlPoint1: CGPointMake(4, 22.88), controlPoint2: CGPointMake(5.07, 21.59))
        kRWTelephonePath.addCurveToPoint(CGPointMake(8.9, 17), controlPoint1: CGPointMake(7.51, 18.66), controlPoint2: CGPointMake(8.9, 17))
        kRWTelephonePath.addCurveToPoint(CGPointMake(11.69, 19.13), controlPoint1: CGPointMake(8.9, 17), controlPoint2: CGPointMake(10.51, 18.23))
        kRWTelephonePath.addCurveToPoint(CGPointMake(12.69, 18.92), controlPoint1: CGPointMake(11.99, 18.98), controlPoint2: CGPointMake(12.34, 18.91))
        kRWTelephonePath.addCurveToPoint(CGPointMake(13.46, 19.1), controlPoint1: CGPointMake(12.96, 18.93), controlPoint2: CGPointMake(13.23, 18.99))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.42, 12.05), controlPoint1: CGPointMake(15.23, 17), controlPoint2: CGPointMake(17.62, 14.18))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.36, 10.43), controlPoint1: CGPointMake(19.19, 11.54), controlPoint2: CGPointMake(19.16, 10.9))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.42, 10.32), controlPoint1: CGPointMake(19.38, 10.39), controlPoint2: CGPointMake(19.4, 10.36))
        kRWTelephonePath.addCurveToPoint(CGPointMake(17, 7.81), controlPoint1: CGPointMake(18.39, 9.26), controlPoint2: CGPointMake(17, 7.81))
        kRWTelephonePath.addLineToPoint(CGPointMake(21.63, 2))
        kRWTelephonePath.addLineToPoint(CGPointMake(21.63, 2))
        kRWTelephonePath.closePath()
        UIColor.whiteColor().setFill()
        kRWTelephonePath.fill()
    }

    public class func drawKRWCallButton2Clicked() {

        //// KRWCallButton2 Drawing
        var kRWCallButton2Path = UIBezierPath()
        kRWCallButton2Path.moveToPoint(CGPointMake(3, 27))
        kRWCallButton2Path.addLineToPoint(CGPointMake(27, 27))
        kRWCallButton2Path.addLineToPoint(CGPointMake(27, 3))
        kRWCallButton2Path.addLineToPoint(CGPointMake(3, 3))
        kRWCallButton2Path.addLineToPoint(CGPointMake(3, 27))
        kRWCallButton2Path.closePath()
        kRWCallButton2Path.lineJoinStyle = kCGLineJoinRound;

        KRWSpotButtonStyleKit.kRWCallButtonColor.setFill()
        kRWCallButton2Path.fill()
        KRWSpotButtonStyleKit.kRWCallButtonColor.setStroke()
        kRWCallButton2Path.lineWidth = 6
        kRWCallButton2Path.stroke()


        //// KRWTelephone Drawing
        var kRWTelephonePath = UIBezierPath()
        kRWTelephonePath.moveToPoint(CGPointMake(24.63, 5.61))
        kRWTelephonePath.addCurveToPoint(CGPointMake(24.1, 8.5), controlPoint1: CGPointMake(24.81, 6.61), controlPoint2: CGPointMake(24.6, 7.64))
        kRWTelephonePath.addCurveToPoint(CGPointMake(23.6, 10.96), controlPoint1: CGPointMake(24.13, 9.03), controlPoint2: CGPointMake(24, 9.82))
        kRWTelephonePath.addCurveToPoint(CGPointMake(10.02, 23.71), controlPoint1: CGPointMake(21.87, 16.01), controlPoint2: CGPointMake(15.94, 22.31))
        kRWTelephonePath.addCurveToPoint(CGPointMake(8.74, 23.97), controlPoint1: CGPointMake(9.53, 23.83), controlPoint2: CGPointMake(9.1, 23.92))
        kRWTelephonePath.addCurveToPoint(CGPointMake(7.73, 24.47), controlPoint1: CGPointMake(8.43, 24.18), controlPoint2: CGPointMake(8.09, 24.35))
        kRWTelephonePath.addCurveToPoint(CGPointMake(3.48, 21.93), controlPoint1: CGPointMake(5.76, 25.11), controlPoint2: CGPointMake(3.85, 23.97))
        kRWTelephonePath.addCurveToPoint(CGPointMake(5.23, 17.67), controlPoint1: CGPointMake(3.19, 20.32), controlPoint2: CGPointMake(3.93, 18.62))
        kRWTelephonePath.addCurveToPoint(CGPointMake(6.38, 17.07), controlPoint1: CGPointMake(5.58, 17.41), controlPoint2: CGPointMake(5.97, 17.21))
        kRWTelephonePath.addCurveToPoint(CGPointMake(10.58, 19.39), controlPoint1: CGPointMake(8.28, 16.46), controlPoint2: CGPointMake(10.12, 17.49))
        kRWTelephonePath.addCurveToPoint(CGPointMake(19.46, 10.43), controlPoint1: CGPointMake(13.11, 16.83), controlPoint2: CGPointMake(16.95, 12.96))
        kRWTelephonePath.addCurveToPoint(CGPointMake(17.8, 8.9), controlPoint1: CGPointMake(18.75, 10.15), controlPoint2: CGPointMake(18.16, 9.62))
        kRWTelephonePath.addCurveToPoint(CGPointMake(17.48, 7.93), controlPoint1: CGPointMake(17.65, 8.6), controlPoint2: CGPointMake(17.54, 8.28))
        kRWTelephonePath.addCurveToPoint(CGPointMake(20.38, 3.07), controlPoint1: CGPointMake(17.11, 5.89), controlPoint2: CGPointMake(18.41, 3.71))
        kRWTelephonePath.addCurveToPoint(CGPointMake(24.63, 5.61), controlPoint1: CGPointMake(22.36, 2.43), controlPoint2: CGPointMake(24.26, 3.57))
        kRWTelephonePath.closePath()
        UIColor.whiteColor().setFill()
        kRWTelephonePath.fill()
    }

    public class func drawKRWSpotIcon() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(0, 0, 1024, 1024))
        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setFill()
        rectanglePath.fill()


        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(186, 294, 652, 436))
        KRWSpotButtonStyleKit.kRWContactButtonColorClicked.setFill()
        ovalPath.fill()


        //// Star Drawing
        var starPath = UIBezierPath()
        starPath.moveToPoint(CGPointMake(512, 364.5))
        starPath.addLineToPoint(CGPointMake(564.72, 440.4))
        starPath.addLineToPoint(CGPointMake(654.18, 466.42))
        starPath.addLineToPoint(CGPointMake(597.31, 539.35))
        starPath.addLineToPoint(CGPointMake(599.87, 631.33))
        starPath.addLineToPoint(CGPointMake(512, 600.5))
        starPath.addLineToPoint(CGPointMake(424.13, 631.33))
        starPath.addLineToPoint(CGPointMake(426.69, 539.35))
        starPath.addLineToPoint(CGPointMake(369.82, 466.42))
        starPath.addLineToPoint(CGPointMake(459.28, 440.4))
        starPath.closePath()
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        starPath.fill()
    }

    public class func drawKRWSpotIconLaunch() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(0, 0, 640, 960))
        KRWSpotButtonStyleKit.kRWDrunkButtonColorClicked.setFill()
        rectanglePath.fill()


        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(182, 256, 276, 179))
        KRWSpotButtonStyleKit.kRWContactButtonColorClicked.setFill()
        ovalPath.fill()


        //// Star Drawing
        var starPath = UIBezierPath()
        starPath.moveToPoint(CGPointMake(320, 286.5))
        starPath.addLineToPoint(CGPointMake(341.69, 317.12))
        starPath.addLineToPoint(CGPointMake(378.49, 327.61))
        starPath.addLineToPoint(CGPointMake(355.09, 357.03))
        starPath.addLineToPoint(CGPointMake(356.15, 394.14))
        starPath.addLineToPoint(CGPointMake(320, 381.7))
        starPath.addLineToPoint(CGPointMake(283.85, 394.14))
        starPath.addLineToPoint(CGPointMake(284.91, 357.03))
        starPath.addLineToPoint(CGPointMake(261.51, 327.61))
        starPath.addLineToPoint(CGPointMake(298.31, 317.12))
        starPath.closePath()
        KRWSpotButtonStyleKit.kRWHomeButtonColorClicked.setFill()
        starPath.fill()
    }

}



extension UIColor {
    func colorWithHue(newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func colorWithSaturation(newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func colorWithBrightness(newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func colorWithAlpha(newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, brightness: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func colorWithHighlight(highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func colorWithShadow(shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
